// Generated by view binder compiler. Do not edit!
package com.example.kaspi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.GridLayout;
import android.widget.HorizontalScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kaspi.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final GridLayout buttonGrid;

  @NonNull
  public final MaterialCardView cardBulb;

  @NonNull
  public final MaterialCardView cardCat;

  @NonNull
  public final MaterialCardView cardCross;

  @NonNull
  public final MaterialCardView cardKitchen;

  @NonNull
  public final MaterialCardView cardTravel;

  @NonNull
  public final MaterialCardView cardTurtle;

  @NonNull
  public final HorizontalScrollView horizontalScroll;

  @NonNull
  public final MaterialButton imageButton1;

  @NonNull
  public final MaterialButton imageButton2;

  @NonNull
  public final MaterialButton imageButton3;

  @NonNull
  public final MaterialButton imageButton4;

  @NonNull
  public final MaterialButton imageButton5;

  @NonNull
  public final MaterialButton imageButton6;

  @NonNull
  public final MaterialButton imageButton7;

  @NonNull
  public final MaterialButton imageButton8;

  @NonNull
  public final EditText searchEditText;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull GridLayout buttonGrid,
      @NonNull MaterialCardView cardBulb, @NonNull MaterialCardView cardCat,
      @NonNull MaterialCardView cardCross, @NonNull MaterialCardView cardKitchen,
      @NonNull MaterialCardView cardTravel, @NonNull MaterialCardView cardTurtle,
      @NonNull HorizontalScrollView horizontalScroll, @NonNull MaterialButton imageButton1,
      @NonNull MaterialButton imageButton2, @NonNull MaterialButton imageButton3,
      @NonNull MaterialButton imageButton4, @NonNull MaterialButton imageButton5,
      @NonNull MaterialButton imageButton6, @NonNull MaterialButton imageButton7,
      @NonNull MaterialButton imageButton8, @NonNull EditText searchEditText) {
    this.rootView = rootView;
    this.buttonGrid = buttonGrid;
    this.cardBulb = cardBulb;
    this.cardCat = cardCat;
    this.cardCross = cardCross;
    this.cardKitchen = cardKitchen;
    this.cardTravel = cardTravel;
    this.cardTurtle = cardTurtle;
    this.horizontalScroll = horizontalScroll;
    this.imageButton1 = imageButton1;
    this.imageButton2 = imageButton2;
    this.imageButton3 = imageButton3;
    this.imageButton4 = imageButton4;
    this.imageButton5 = imageButton5;
    this.imageButton6 = imageButton6;
    this.imageButton7 = imageButton7;
    this.imageButton8 = imageButton8;
    this.searchEditText = searchEditText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_grid;
      GridLayout buttonGrid = ViewBindings.findChildViewById(rootView, id);
      if (buttonGrid == null) {
        break missingId;
      }

      id = R.id.card_bulb;
      MaterialCardView cardBulb = ViewBindings.findChildViewById(rootView, id);
      if (cardBulb == null) {
        break missingId;
      }

      id = R.id.card_cat;
      MaterialCardView cardCat = ViewBindings.findChildViewById(rootView, id);
      if (cardCat == null) {
        break missingId;
      }

      id = R.id.card_cross;
      MaterialCardView cardCross = ViewBindings.findChildViewById(rootView, id);
      if (cardCross == null) {
        break missingId;
      }

      id = R.id.card_kitchen;
      MaterialCardView cardKitchen = ViewBindings.findChildViewById(rootView, id);
      if (cardKitchen == null) {
        break missingId;
      }

      id = R.id.card_travel;
      MaterialCardView cardTravel = ViewBindings.findChildViewById(rootView, id);
      if (cardTravel == null) {
        break missingId;
      }

      id = R.id.card_turtle;
      MaterialCardView cardTurtle = ViewBindings.findChildViewById(rootView, id);
      if (cardTurtle == null) {
        break missingId;
      }

      id = R.id.horizontal_scroll;
      HorizontalScrollView horizontalScroll = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScroll == null) {
        break missingId;
      }

      id = R.id.imageButton1;
      MaterialButton imageButton1 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton1 == null) {
        break missingId;
      }

      id = R.id.imageButton2;
      MaterialButton imageButton2 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton2 == null) {
        break missingId;
      }

      id = R.id.imageButton3;
      MaterialButton imageButton3 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton3 == null) {
        break missingId;
      }

      id = R.id.imageButton4;
      MaterialButton imageButton4 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton4 == null) {
        break missingId;
      }

      id = R.id.imageButton5;
      MaterialButton imageButton5 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton5 == null) {
        break missingId;
      }

      id = R.id.imageButton6;
      MaterialButton imageButton6 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton6 == null) {
        break missingId;
      }

      id = R.id.imageButton7;
      MaterialButton imageButton7 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton7 == null) {
        break missingId;
      }

      id = R.id.imageButton8;
      MaterialButton imageButton8 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton8 == null) {
        break missingId;
      }

      id = R.id.search_edit_text;
      EditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, buttonGrid, cardBulb, cardCat,
          cardCross, cardKitchen, cardTravel, cardTurtle, horizontalScroll, imageButton1,
          imageButton2, imageButton3, imageButton4, imageButton5, imageButton6, imageButton7,
          imageButton8, searchEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
