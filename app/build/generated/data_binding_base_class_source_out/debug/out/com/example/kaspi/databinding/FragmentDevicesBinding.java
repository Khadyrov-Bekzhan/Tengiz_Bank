// Generated by view binder compiler. Do not edit!
package com.example.kaspi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kaspi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDevicesBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnToggleDevice1;

  @NonNull
  public final Button btnToggleDevice2;

  @NonNull
  public final TextView tvDeviceName1;

  @NonNull
  public final TextView tvDeviceName2;

  @NonNull
  public final TextView tvDeviceStatus1;

  @NonNull
  public final TextView tvDeviceStatus2;

  @NonNull
  public final TextView tvDevicesHeader;

  private FragmentDevicesBinding(@NonNull ScrollView rootView, @NonNull Button btnToggleDevice1,
      @NonNull Button btnToggleDevice2, @NonNull TextView tvDeviceName1,
      @NonNull TextView tvDeviceName2, @NonNull TextView tvDeviceStatus1,
      @NonNull TextView tvDeviceStatus2, @NonNull TextView tvDevicesHeader) {
    this.rootView = rootView;
    this.btnToggleDevice1 = btnToggleDevice1;
    this.btnToggleDevice2 = btnToggleDevice2;
    this.tvDeviceName1 = tvDeviceName1;
    this.tvDeviceName2 = tvDeviceName2;
    this.tvDeviceStatus1 = tvDeviceStatus1;
    this.tvDeviceStatus2 = tvDeviceStatus2;
    this.tvDevicesHeader = tvDevicesHeader;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDevicesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDevicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_devices, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDevicesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnToggleDevice1;
      Button btnToggleDevice1 = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleDevice1 == null) {
        break missingId;
      }

      id = R.id.btnToggleDevice2;
      Button btnToggleDevice2 = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleDevice2 == null) {
        break missingId;
      }

      id = R.id.tvDeviceName1;
      TextView tvDeviceName1 = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceName1 == null) {
        break missingId;
      }

      id = R.id.tvDeviceName2;
      TextView tvDeviceName2 = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceName2 == null) {
        break missingId;
      }

      id = R.id.tvDeviceStatus1;
      TextView tvDeviceStatus1 = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceStatus1 == null) {
        break missingId;
      }

      id = R.id.tvDeviceStatus2;
      TextView tvDeviceStatus2 = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceStatus2 == null) {
        break missingId;
      }

      id = R.id.tvDevicesHeader;
      TextView tvDevicesHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvDevicesHeader == null) {
        break missingId;
      }

      return new FragmentDevicesBinding((ScrollView) rootView, btnToggleDevice1, btnToggleDevice2,
          tvDeviceName1, tvDeviceName2, tvDeviceStatus1, tvDeviceStatus2, tvDevicesHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
